# Default values for faro-shop.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

otel:
  http:
    endpoint: 'http://grafana-k8s-monitoring-grafana-agent.faro-shop.svc.cluster.local:4318'
  grpc:
    endpoint: 'http://grafana-k8s-monitoring-grafana-agent.faro-shop.svc.cluster.local:4317'

app:
  env:
    APP_ENV: production
    APP_SECRET: changeme
    OTEL_PHP_AUTOLOAD_ENABLED: 'true'
    OTEL_SERVICE_NAME: faros-shop-backend
    OTEL_TRACES_EXPORTER: otlp
    OTEL_METRICS_EXPORTER: otlp
    OTEL_LOGS_EXPORTER: otlp
    OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
    OTEL_EXPORTER_OTLP_ENDPOINT: http://otelcol:4318
    OTEL_RESOURCE_ATTRIBUTES: deployment.environment=production,service.namespace=faros-shop,service.instance.id=1234
    OTEL_PROPAGATORS: baggage,tracecontext
    TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
    TRUSTED_HOSTS: ^${SERVER_NAME:-example\.com|localhost}|caddy$$

postgres:
  image:
    repository: postgres
    pullPolicy: IfNotPresent
    tag: 15-alpine
    storageClassName: standard

image:
  repository: ghcr.io/cedricziel/faro-shop-app-php
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

caddy:
  image:
    repository: ghcr.io/cedricziel/faro-shop-app-caddy
    pullPolicy: IfNotPresent
    tag: ""
  env:
    OTEL_SERVICE_NAME: faros-shop-proxy
    OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://otelcol:4317
    MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
    MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'

load:
  image:
    repository: ghcr.io/cedricziel/faro-shop-k6
    pullPolicy: IfNotPresent
    tag: ""
  env:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
