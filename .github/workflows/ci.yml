name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGES_PREFIX: ghcr.io/${{ github.repository }}-

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Build Docker images
        uses: docker/bake-action@v3
        with:
          pull: true
          load: true
          files: |
            docker-compose.yml
            docker-compose.override.yml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
      -
        name: Start services
        run: docker compose up --wait --no-build
      -
        name: Check HTTP reachability
        run: curl -v -o /dev/null http://localhost
      -
        name: Check HTTPS reachability
        run: curl -vk -o /dev/null https://localhost
      -
        name: Create test database
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      -
        name: Run migrations
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      -
        name: Run PHPUnit
        if: false # Remove this line if PHPUnit is installed
        run: docker compose exec -T php bin/phpunit
      -
        name: Doctrine Schema Validator
        if: false # Remove this line if Doctrine ORM is installed
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
  build-images:
    runs-on: ubuntu-latest
    needs:
      - lint
      - tests
    if: success() && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}-app-caddy
            ghcr.io/${{ github.repository }}-app-php
            ghcr.io/${{ github.repository }}-php-cache
            ghcr.io/${{ github.repository }}-database
            ghcr.io/${{ github.repository }}-otelcol

      - name: Build Docker images
        uses: docker/bake-action@v3
        with:
          push: true
          files: |
            ${{ steps.docker-metadata.outputs.bake-file }}
            docker-compose.yml
            docker-compose.override.yml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
